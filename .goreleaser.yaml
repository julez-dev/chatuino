version: 2

before:
  hooks:
    - go mod verify
    - go generate ./...

dockers:
  - image_templates:
      - "ghcr.io/julez-dev/chatuino:latest"
      - "ghcr.io/julez-dev/chatuino:{{ .Tag }}"
    goos: linux
    goarch: amd64
    dockerfile: docker/Dockerfile
    build_flag_templates:
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--platform=linux/amd64"

builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    tags:
      - osusergo
      - netgo
    ldflags:
      - -s -w -X main.Version={{ .Version }} -X main.Commit={{.Commit}} -X main.Date={{ .CommitDate }}

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip

changelog:
  sort: asc
  filters:
    exclude:
      - "^doc:"
      - "^test:"
      - "^chore:"
      - "^testdata:"
      - "^wip:"
      - "^build(deps):"
  groups:
    - title: Features
      regexp: '^.*?feature(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: "Bug fixes"
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: Misc
      order: 999
